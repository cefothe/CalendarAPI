openapi: 3.0.0
servers:
  - url: 'localhost/api/v1'
info:
  description: >-
    This is a swagger definition for calendar api.
  version: 0.0.1
  title: Calendar API
  contact:
    email: cefothe@gmail.com
tags:
  - name: Event
    description: Event is evething related to create/update/delete meetings
  - name: Room
    description: Room, describe the space where meeting are contucts
  - name: Authentication
    description: Create a account. Signin in our system
  - name: User
security:
  - bearerAuth: []
paths:
  /rooms:
    get:
      tags:
        - Room
      summary: Return all rooms
      parameters:
        - in: query
          name: from
          description: Return all rooms that are available from that time
          schema:
            type: string
            format: date-time
        - in: query
          name: to
          description: Return all rooms that are available to that time
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Return all rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
        '401':
          description: Unauthorized (You are not log in into our system)
        '403':
          description: You don't have permission to do that operation
        '500':
          description: Internal service error
        '503':
          description: Our service is temporary unavaible
    post:
      tags:
        - Room
      summary: Create room
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoom'
      responses:
        '201':
          description: Room is created sussessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '401':
          description: Unauthorized (You are not log in into our system)
        '403':
          description: You don't have permission to do that operation
        '500':
          description: Internal service error
        '503':
          description: Our service is temporary unavaible

  /events:
    get:
      tags:
        - Event
      summary: Return information about all events
      parameters:
        - in: query
          name: from
          description: Return the events from this starting time
          schema:
            type: string
            format: date-time
        - in: query
          name: to
          description: Return the events to this starting time
          schema:
            type: string
            format: date-time
        - in: query
          name: room
          description: Return the events only for specific room
          schema:
            type: string
      responses:
        '200':
          description: Return the information for particular filters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '401':
          description: Unauthorized (You are not log in into our system)
        '403':
          description: You don't have permission to do that operation
        '500':
          description: Internal service error
        '503':
          description: Our service is temporary unavaible
    post:
      tags:
        - Event
      summary: Create a event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateEvent'
      responses:
        '201':
          description: Event created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '401':
          description: Unauthorized (You are not log in into our system)
        '403':
          description: You don't have permission to do that operation
        '409':
          description: Event can't be created baceuse of conflicts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventConflict'
        '500':
          description: Internal service error
        '503':
          description: Our service is temporary unavaible
  /events/{id}:
    get:
      tags:
        - Event
      summary: Represents a event by id
      parameters:
        - name: id
          in: path
          description: Event ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200' :
          description: Susscefully get event by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '401':
          description: Unauthorized (You are not log in into our system)
        '403':
          description: You don't have permission to do that operation
        '404':
          description: Event with that particular ID is not exist in our system
        '409':
          description: Event can't be created baceuse of conflicts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventConflict'
        '500':
          description: Internal service error
        '503':
          description: Our service is temporary unavaible
    post:
      tags:
        - Event
      summary: Represents a event by id
      parameters:
        - name: id
          in: path
          description: Event ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateEvent'
      responses:
        '200' :
          description: Event is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '401':
          description: Unauthorized (You are not log in into our system)
        '403':
          description: You don't have permission to do that operation
        '404':
          description: Event with that particular ID is not exist in our system
        '500':
          description: Internal service error
        '503':
          description: Our service is temporary unavaible
    delete:
      tags:
        - Event
      summary: Delete event by ID
      parameters:
        - name: id
          in: path
          description: Event ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Event is deleted successfully
        '401':
          description: Unauthorized (You are not log in into our system)
        '403':
          description: You don't have permission to do that operation
        '404':
          description: Event with that particular ID is not exist in our system
        '500':
          description: Internal service error
        '503':
          description: Our service is temporary unavaible
  /auth/signin:
    post:
      security: []
      tags:
        - Authentication
      summary: Use this endpoint to log in
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successfully login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
        '401':
          description: Unauthorized (You are not log in into our system)
        '500':
          description: Internal service error
        '503':
          description: Our service is temporary unavaible
  /auth/signup:
    post:
      security: []
      tags:
        - Authentication
      summary: Use this enpoint to create new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '200':
          description: User is created successfully
        '400':
          description: Username or email allready exist in our system
        '500':
          description: Internal service error
        '503':
          description: Our service is temporary unavaible
  /users:
    get:
      tags:
        - User
      description: Provide information for all users
      responses:
        '200':
          description: All users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized (You are not log in into our system)
        '403':
          description: You don't have permission to do that operation
        '500':
          description: Internal service error
        '503':
          description: Our service is temporary unavaible
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
    CreateUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    JwtResponse:
      type: object
      properties:
        token:
          type: string
    EventConflict:
      type: object
      properties:
        room:
          type: string
        users:
          type: array
          items:
            type: string
            format: uuid
    CreateUpdateEvent:
      type: object
      properties:
        title:
          type: string
          description: The Event name
        from:
          type: string
          format: date-time
          description: Start time for the Event
        to:
          type: string
          format: date-time
          description: End time for the Event
        room:
          type: string
          format: uuid
        participans:
          type: array
          items:
            type: string
            format: uuid
      required:
        - title
        - from
        - to
        - room
    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description:  UUID that represent Event id in our system
        title:
          type: string
          description: The Event name
        from:
          type: string
          format: date-time
          description: Start time for the Event
        to:
          type: string
          format: date-time
          description: End time for the Event
        createdBy:
          $ref: '#/components/schemas/Participant'
        createdAt:
          type: string
          format: date-time
        room:
          $ref: '#/components/schemas/Room'
        participans:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
    CreateRoom:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    Room:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: UUID that represent Room id in our system
        name:
          type: string
          description: The name of the room
    Participant:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: UUID that represnrt User id in our system
        name:
          type: string
          description: The username

  links: {}
  callbacks: {}